swagger: "2.0"
info:
  description: "As you know Drover is an online marketplace for booking cars, and as you expect we try to have as much cars as we can on our platform. For this challenge we want you to implement a REST API to store, update and list cars"
  version: "1.0.0"
  title: "Drover Backend Challenge"
  contact:
    email: "darkymiguel@gmail.com"
host: "localhost:3000"
basePath: "/v1"
tags:
  - name: "car"
    description: "Everything about Cars"
schemes:
  - "https"
  - "http"
paths:
  /cars:
    post:
      tags:
        - "car"
      summary: "Add a new car to the store"
      description: ""
      operationId: "addCar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Car object that needs to be added to the system"
          required: true
          schema:
            $ref: "#/definitions/Car"
      responses:
        "400":
          description: "Bad request"
  /cars/{carId}:
    get:
      tags:
        - "car"
      summary: "Find car by ID"
      description: "Returns a car"
      operationId: "getCarById"
      produces:
        - "application/json"
      parameters:
        - name: "carId"
          in: "path"
          description: "ID of car to return"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Car"
        "404":
          description: "car not found"
    put:
      tags:
        - "car"
      summary: "Updates a car in the system"
      description: ""
      operationId: "updateCar"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "carId"
          in: "path"
          description: "ID of car that needs to be updated"
          required: true
          type: "integer"
          format: "int64"
        - name: "car"
          in: "body"
          description: "Updated the car object"
          required: true
          schema:
            $ref: "#/definitions/Car"
      responses:
        "404":
          description: "Car not found"
        "422":
          description: "Unprocessable entity"
    delete:
      tags:
        - "car"
      summary: "Deletes a car"
      description: ""
      operationId: "deleteCar"
      produces:
        - "application/json"
      parameters:
        - name: "carId"
          in: "path"
          description: "Car id to delete"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "404":
          description: "Car not found"

definitions:
  Car:
    type: "object"
    required:
      - "maker_id"
      - "model_id"
      - "year"
      - "color"
      - "subscription_id"
      - "availability_date"
    properties:
      maker_id:
        type: "integer"
        format: "int64"
      model_id:
        type: "integer"
        format: "int64"
      subscription_id:
        type: "integer"
        format: "int64"
      year:
        type: "integer"
        format: "int64"
      color:
        type: "string"
